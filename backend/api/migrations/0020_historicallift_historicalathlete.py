# Generated by Django 4.1.1 on 2022-09-28 03:43

import django.db.models.deletion
import hashid_field.field
import simple_history.models
from django.conf import settings
from django.db import migrations, models

import api.models.athletes


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("api", "0019_historicalcompetition"),
    ]

    operations = [
        migrations.CreateModel(
            name="HistoricalLift",
            fields=[
                (
                    "reference_id",
                    models.IntegerField(blank=True, db_index=True),
                ),
                ("session_number", models.IntegerField(null=True)),
                ("lottery_number", models.IntegerField(blank=True)),
                (
                    "bodyweight",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=5
                    ),
                ),
                (
                    "weight_category",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("W45", "W45"),
                            ("W49", "W49"),
                            ("W55", "W55"),
                            ("W59", "W59"),
                            ("W64", "W64"),
                            ("W71", "W71"),
                            ("W76", "W76"),
                            ("W81", "W81"),
                            ("W40", "W40"),
                            ("W81+", "W81+"),
                            ("W87", "W87"),
                            ("W87+", "W87+"),
                            ("M55", "M55"),
                            ("M61", "M61"),
                            ("M67", "M67"),
                            ("M73", "M73"),
                            ("M81", "M81"),
                            ("M89", "M89"),
                            ("M96", "M96"),
                            ("M102", "M102"),
                            ("M49", "M49"),
                            ("M102+", "M102+"),
                            ("M109", "M109"),
                            ("M109+", "M109+"),
                            ("W44", "W44"),
                            ("W48", "W48"),
                            ("W53", "W53"),
                            ("W58", "W58"),
                            ("W63", "W63"),
                            ("W69", "W69"),
                            ("W75", "W75"),
                            ("W75+", "W75+"),
                            ("W90", "W90"),
                            ("W90+", "W90+"),
                            ("M50", "M50"),
                            ("M56", "M56"),
                            ("M62", "M62"),
                            ("M69", "M69"),
                            ("M77", "M77"),
                            ("M85", "M85"),
                            ("M94", "M94"),
                            ("M94+", "M94+"),
                            ("M105", "M105"),
                            ("M105+", "M105+"),
                        ],
                        max_length=5,
                    ),
                ),
                (
                    "team",
                    models.CharField(
                        blank=True, default="IND", max_length=128
                    ),
                ),
                (
                    "snatch_first",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LIFT", "Good Lift"),
                            ("NOLIFT", "No Lift"),
                            ("DNA", "Did not attempt"),
                        ],
                        default="DNA",
                        max_length=6,
                    ),
                ),
                (
                    "snatch_first_weight",
                    models.IntegerField(blank=True, default=0),
                ),
                (
                    "snatch_second",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LIFT", "Good Lift"),
                            ("NOLIFT", "No Lift"),
                            ("DNA", "Did not attempt"),
                        ],
                        default="DNA",
                        max_length=6,
                    ),
                ),
                (
                    "snatch_second_weight",
                    models.IntegerField(blank=True, default=0),
                ),
                (
                    "snatch_third",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LIFT", "Good Lift"),
                            ("NOLIFT", "No Lift"),
                            ("DNA", "Did not attempt"),
                        ],
                        default="DNA",
                        max_length=6,
                    ),
                ),
                (
                    "snatch_third_weight",
                    models.IntegerField(blank=True, default=0),
                ),
                (
                    "cnj_first",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LIFT", "Good Lift"),
                            ("NOLIFT", "No Lift"),
                            ("DNA", "Did not attempt"),
                        ],
                        default="DNA",
                        max_length=6,
                    ),
                ),
                (
                    "cnj_first_weight",
                    models.IntegerField(blank=True, default=0),
                ),
                (
                    "cnj_second",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LIFT", "Good Lift"),
                            ("NOLIFT", "No Lift"),
                            ("DNA", "Did not attempt"),
                        ],
                        default="DNA",
                        max_length=6,
                    ),
                ),
                (
                    "cnj_second_weight",
                    models.IntegerField(blank=True, default=0),
                ),
                (
                    "cnj_third",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("LIFT", "Good Lift"),
                            ("NOLIFT", "No Lift"),
                            ("DNA", "Did not attempt"),
                        ],
                        default="DNA",
                        max_length=6,
                    ),
                ),
                (
                    "cnj_third_weight",
                    models.IntegerField(blank=True, default=0),
                ),
                (
                    "history_id",
                    hashid_field.field.HashidAutoField(
                        alphabet="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",
                        editable=False,
                        min_length=7,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                (
                    "history_change_reason",
                    models.CharField(max_length=100, null=True),
                ),
                (
                    "history_type",
                    models.CharField(
                        choices=[
                            ("+", "Created"),
                            ("~", "Changed"),
                            ("-", "Deleted"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "athlete",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="api.athlete",
                    ),
                ),
                (
                    "competition",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="api.competition",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical lift",
                "verbose_name_plural": "historical lifts",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalAthlete",
            fields=[
                (
                    "reference_id",
                    models.IntegerField(blank=True, db_index=True),
                ),
                ("first_name", models.CharField(max_length=128)),
                ("last_name", models.CharField(max_length=128)),
                (
                    "yearborn",
                    models.IntegerField(
                        default=1900,
                        validators=[api.models.athletes.check_yearborn],
                    ),
                ),
                (
                    "history_id",
                    hashid_field.field.HashidAutoField(
                        alphabet="abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890",
                        editable=False,
                        min_length=7,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("history_date", models.DateTimeField(db_index=True)),
                (
                    "history_change_reason",
                    models.CharField(max_length=100, null=True),
                ),
                (
                    "history_type",
                    models.CharField(
                        choices=[
                            ("+", "Created"),
                            ("~", "Changed"),
                            ("-", "Deleted"),
                        ],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical athlete",
                "verbose_name_plural": "historical athletes",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": ("history_date", "history_id"),
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
    ]
