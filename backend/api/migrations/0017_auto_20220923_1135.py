# Generated by Django 4.1.1 on 2022-09-22 23:35
# custom functions created

from datetime import datetime

from django.db import migrations

from api.models import AgeCategory, AgeCategoryEra
from api.tests.test_models.test_support.conftest import AgeCategoryMock


def create_age_categories(apps, schema_editor):
    era = AgeCategoryEra.objects.create(
        date_start=datetime(1970, 1, 1), description="Age categories"
    )
    age_categories = [
        AgeCategoryMock(
            name="Youth", era=era, lower_age_bound=13, upper_age_bound=17
        ),
        AgeCategoryMock(
            name="Junior", era=era, lower_age_bound=15, upper_age_bound=20
        ),
        AgeCategoryMock(name="Senior", era=era, lower_age_bound=15),
        AgeCategoryMock(name="Masters", lower_age_bound=35),
        AgeCategoryMock(
            name="Masters 35-39",
            era=era,
            lower_age_bound=35,
            upper_age_bound=39,
        ),
        AgeCategoryMock(
            name="Masters 40-44",
            era=era,
            lower_age_bound=40,
            upper_age_bound=44,
        ),
        AgeCategoryMock(
            name="Masters 45-49",
            era=era,
            lower_age_bound=45,
            upper_age_bound=49,
        ),
        AgeCategoryMock(
            name="Masters 50-54",
            era=era,
            lower_age_bound=50,
            upper_age_bound=54,
        ),
        AgeCategoryMock(
            name="Masters 54-59",
            era=era,
            lower_age_bound=55,
            upper_age_bound=59,
        ),
        AgeCategoryMock(
            name="Masters 60-64",
            era=era,
            lower_age_bound=60,
            upper_age_bound=64,
        ),
        AgeCategoryMock(
            name="Masters 65-69",
            era=era,
            lower_age_bound=65,
            upper_age_bound=69,
        ),
        AgeCategoryMock(name="Masters 70+", era=era, lower_age_bound=70),
    ]
    for age_category in age_categories:
        AgeCategory.objects.create(
            name=age_category.name,
            lower_age_bound=age_category.lower_age_bound,
            upper_age_bound=age_category.upper_age_bound,
        )


class Migration(migrations.Migration):

    dependencies = [
        ("api", "0016_weightcategoryera_alter_agecategory_era_and_more"),
    ]

    operations = [
        migrations.RunPython(create_age_categories, migrations.RunPython.noop)
    ]
